pipeline {
    agent any
    environment {
        // Change the app package to your DOcker Hub repo
        Repository = "razdahan31/flask-docker"
        Tag_Name = "v1.${env.BUILD_NUMBER}"
        App_Package = "$Repository:$Tag_Name"
        // Change the path to your pipeline
        Pipeline_Path = "flask-docker-pipeline/pipelines/flask-docker"
        TEST_IP = sh(script: "aws ec2 describe-instances --region eu-central-1 --filters Name=tag:platform,Values=test --query 'Reservations[].Instances[].PublicIpAddress' --output text", returnStdout: true).trim()
        PROD_IP = sh(script: "aws ec2 describe-instances --region eu-central-1 --filters Name=tag:platform,Values=production --query 'Reservations[].Instances[].PublicIpAddress' --output text", returnStdout: true).trim()
    }
    triggers {
        // Checking for commits on github every minute 
        pollSCM('*/1 * * * *')
    }
    stages {
        stage('Cleanup') {
            steps {
                echo 'Performing cleanup on workspace...'
                sh 'rm -rf *'
            }
        }
        stage('Build') {
            steps {
                echo 'Cloning from GitHub...'
                sh 'git clone https://github.com/Raz-Dahan/pipelines.git'
                // Change the dir to your app
                dir("/var/lib/jenkins/workspace/${Pipeline_Path}/alpaca-flask/") {
                    echo 'Building docker image...'
                    sh "docker build -t ${App_Package} ."
                    echo 'Pushing to image Docker Hub...'
                    sh "docker push ${App_Package}"
                }
            }
        }
        stage('Test') {
            steps {
                echo 'Deploying and Running tests on Test instance...'
                sh "/bin/bash /var/lib/jenkins/workspace/${Pipeline_Path}/deploy.sh --test ${TEST_IP} ${App_Package}"
            }
        }
        stage('Docker Hub version control') {
            steps{
                sh "/bin/bash /var/lib/jenkins/workspace/${Pipeline_Path}/DH_versioncontrol.sh ${Repository}"
            }
        }
        stage ('Aprove') {
            steps {
                echo 'Waiting for aproval...'
                // For auto aproval add "//" before input line, for manual aproval remove "//" from input line
                // input 'Do you want to deploy project on production servers?'
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying on Production instance...'
                sh "/bin/bash /var/lib/jenkins/workspace/${Pipeline_Path}/deploy.sh ${PROD_IP} ${App_Package}"
            }   
        }
    }
}
