pipeline {
    agent any
    environment {
        AlpacaPackage = "razdahan31/flask-docker:v1.${env.BUILD_NUMBER}"
        TEST_IP = sh(script: "aws ec2 describe-instances --region eu-central-1 --filters Name=tag:platform,Values=test --query 'Reservations[].Instances[].PublicIpAddress' --output text", returnStdout: true).trim()
        PROD_IP = sh(script: "aws ec2 describe-instances --region eu-central-1 --filters Name=tag:platform,Values=production --query 'Reservations[].Instances[].PublicIpAddress' --output text", returnStdout: true).trim()
    }
    triggers {
        pollSCM('*/1 * * * *')
    }
    stages {
        stage('Cleanup') {
            steps {
                sh 'echo "Performing cleanup on workspace..."'
                sh 'rm -rf *'
            }
        }
        stage('Build') {
            steps {
                sh 'echo "Cloning from GitHub..."'
                sh 'git clone https://github.com/Raz-Dahan/flask-docker.git'
                dir('/var/lib/jenkins/workspace/flask-docker-old-pipeline/flask-docker/alpaca-flask/') {
                    sh 'echo "Building docker image..."'
                    sh 'docker build -t ${AlpacaPackage} .'
                    sh 'echo "Pushing to image Docker Hub..."'
                    sh 'docker push ${AlpacaPackage}'
                }
            }
        }
        stage('Test') {
            steps {
                echo 'Deploying on instance'
                sh '/bin/bash /var/lib/jenkins/workspace/flask-docker-old-pipeline/flask-docker/deploy.sh ${TEST_IP} ${AlpacaPackage}'
                echo 'Running tests...'
                sh '/bin/bash /var/lib/jenkins/workspace/flask-docker-old-pipeline/flask-docker/tests.sh'
            }
        }
        stage ('Aprove') {
            steps {
                sh 'echo "Waiting for aproval..."'
                // For auto aproval add '//' before input line, for manual aproval remove '//' from input line
                // input 'Do you want to deploy project to production?'
            }
        }
        stage('Deploy') {
            steps {
                echo 'Deploying on instance'
                sh '/bin/bash /var/lib/jenkins/workspace/flask-docker-old-pipeline/flask-docker/deploy.sh ${PROD_IP} ${AlpacaPackage}'
            }   
        }
    }
}
